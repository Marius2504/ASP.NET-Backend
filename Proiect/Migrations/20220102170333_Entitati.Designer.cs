// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Proiect.Models;

namespace Proiect.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220102170333_Entitati")]
    partial class Entitati
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Proiect.Entities.Adresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GymId")
                        .HasColumnType("int");

                    b.Property<string>("Judet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Oras")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Strada")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GymId")
                        .IsUnique();

                    b.ToTable("Adresas");
                });

            modelBuilder.Entity("Proiect.Entities.Antrenor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nume")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OmId")
                        .HasColumnType("int");

                    b.Property<string>("Optiuni")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("varsta")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Antrenors");
                });

            modelBuilder.Entity("Proiect.Entities.AntrenorGym", b =>
                {
                    b.Property<int>("GymId")
                        .HasColumnType("int");

                    b.Property<int>("AntrenorId")
                        .HasColumnType("int");

                    b.HasKey("GymId", "AntrenorId");

                    b.HasIndex("AntrenorId");

                    b.ToTable("AntrenorGym");
                });

            modelBuilder.Entity("Proiect.Entities.Gym", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nume")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Optiuni")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Rating")
                        .HasColumnType("real");

                    b.Property<string>("Recenzii")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Gyms");
                });

            modelBuilder.Entity("Proiect.Entities.Om", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AntrenorsId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GymsId")
                        .HasColumnType("int");

                    b.Property<string>("Nume")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Varsta")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AntrenorsId");

                    b.HasIndex("GymsId");

                    b.ToTable("Oms");
                });

            modelBuilder.Entity("Proiect.Entities.Adresa", b =>
                {
                    b.HasOne("Proiect.Entities.Gym", "Gyms")
                        .WithOne("Adresas")
                        .HasForeignKey("Proiect.Entities.Adresa", "GymId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gyms");
                });

            modelBuilder.Entity("Proiect.Entities.AntrenorGym", b =>
                {
                    b.HasOne("Proiect.Entities.Antrenor", "Antrenors")
                        .WithMany("AntrenorGyms")
                        .HasForeignKey("AntrenorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proiect.Entities.Gym", "Gyms")
                        .WithMany("AntrenorGyms")
                        .HasForeignKey("GymId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Antrenors");

                    b.Navigation("Gyms");
                });

            modelBuilder.Entity("Proiect.Entities.Om", b =>
                {
                    b.HasOne("Proiect.Entities.Antrenor", "Antrenors")
                        .WithMany("Oms")
                        .HasForeignKey("AntrenorsId");

                    b.HasOne("Proiect.Entities.Gym", "Gyms")
                        .WithMany()
                        .HasForeignKey("GymsId");

                    b.Navigation("Antrenors");

                    b.Navigation("Gyms");
                });

            modelBuilder.Entity("Proiect.Entities.Antrenor", b =>
                {
                    b.Navigation("AntrenorGyms");

                    b.Navigation("Oms");
                });

            modelBuilder.Entity("Proiect.Entities.Gym", b =>
                {
                    b.Navigation("Adresas");

                    b.Navigation("AntrenorGyms");
                });
#pragma warning restore 612, 618
        }
    }
}
